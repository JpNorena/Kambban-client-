{"version":3,"sources":["components/ContainerHeader/index.js","components/AllMyComponents/addUserForm.js","components/AllMyComponents/editUserForm.js","components/AllMyComponents/userTable.js","app/services/ApiServices.js","components/AllMyComponents/textField.js","components/AllMyComponents/dataBox.js","app/routes/UsersAdministration/index.js"],"names":["getUrlString","path","sub","index","split","ContainerHeader","title","match","substr","subPath","className","tag","map","active","length","key","href","arr","charAt","toUpperCase","slice","getDisplayString","AddUserForm","props","initialFormState","id","name","username","email","password","user_type","company","useState","user","setUser","handleInputChange","event","target","value","onSubmit","preventDefault","addUser","IntlMessages","type","onChange","EditUserForm","currentUser","useEffect","updateUser","onClick","setEditing","UserTable","users","editRow","deleteUser","colSpan","ApiService","fetchGet","url","data","a","async","fetch","response","json","jsonData","console","log","MyTextField","setUsers","setCurrentUser","editing","settingUsers","api","URL","updatedUser","filter","columns","label","options","sort","filterType","search","print","download","selectableRows","DataBox","state","isLoaded","then","res","setState","records","this","color","height","width","Component","UsersAdministration"],"mappings":"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","file":"static/js/9.393d1eeb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n  const arr = sub.split(\"-\");\r\n  if (arr.length > 1) {\r\n    return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n  } else {\r\n    return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n  }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '#/';\r\n  } else {\r\n    return '#/' + path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n  const path = match.path.substr(1);\r\n  const subPath = path.split('/');\r\n  return (\r\n    <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n      <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n      <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n        {subPath.map((sub, index) => {\r\n            return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                   tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                   href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n          }\r\n        )}\r\n      </Breadcrumb>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","import React, { useState } from 'react'\nimport './mystyles.css';\nimport IntlMessages from \"util/IntlMessages\";\n\n\n\nconst AddUserForm = props => {\n\tconst initialFormState = { id: null, name: '', username: '', email: '', password: '', user_type: '', company: '' }\n\tconst [ user, setUser ] = useState(initialFormState)\n\n\tconst handleInputChange = event => {\n\t\tconst { name, value } = event.target\n\n\t\tsetUser({ ...user, [name]: value })\n\t}\n\n\treturn (\n\t\t<form\n            className=\"formInput\"\n\t\t\tonSubmit={event => {\n\t\t\t\tevent.preventDefault()\n\t\t\t\tif (!user.name || !user.username) return\n\n\t\t\t\tprops.addUser(user)\n\t\t\t\tsetUser(initialFormState)\n\t\t\t}}\n\t\t>\n            <label className=\"label \"><IntlMessages id=\"appModule.name\" /></label>\n\t\t\t<input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\n\t\t\t<label className=\"label \"><IntlMessages id=\"appModule.username\" /></label>\n\t\t\t<input type=\"text\" name=\"username\" value={user.username} onChange={handleInputChange} />\n            <label className=\"label \"><IntlMessages id=\"sidebar.appModule.mail\" /></label>\n\t\t\t<input type=\"text\" name=\"email\" value={user.email} onChange={handleInputChange} />\n            <label className=\"label \"><IntlMessages id=\"appModule.password\" /></label>\n\t\t\t<input type=\"text\" name=\"password\" value={user.password} onChange={handleInputChange} />\n            <label className=\"label \"><IntlMessages id=\"company.userType\" /></label>\n\t\t\t<input type=\"text\" name=\"user_type\" value={user.user_type} onChange={handleInputChange} />\n            <label className=\"label \"><IntlMessages id=\"company.name\" /></label>\n\t\t\t<input type=\"text\" name=\"company\" value={user.company} onChange={handleInputChange} />\n            <button className=\" button button2\"><IntlMessages id=\"add.new.user\"/></button>\n\t\t</form>\n\t)\n}\n\nexport default AddUserForm","import React, { useState, useEffect } from \"react\";\nimport \"./mystyles.css\";\nimport IntlMessages from \"util/IntlMessages\";\n\nconst EditUserForm = props => {\n  const [user, setUser] = useState(props.currentUser);\n\n  useEffect(() => {\n    setUser(props.currentUser);\n  }, [props]);\n  // You can tell React to skip applying an effect if certain values haven’t changed between re-renders. [ props ]\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    setUser({ ...user, [name]: value });\n  };\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault();\n\n        props.updateUser(user.id, user);\n      }}\n    >\n      <label className=\"label \"><IntlMessages id=\"appModule.name\" /></label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={user.name}\n        onChange={handleInputChange}\n      />\n      <label className=\"label \"><IntlMessages id=\"appModule.username\" /></label>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={user.username}\n        onChange={handleInputChange}\n      />\n      <label className=\"label \"><IntlMessages id=\"sidebar.appModule.mail\" /></label>\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={user.email}\n        onChange={handleInputChange}\n      />\n      <label className=\"label \"> <IntlMessages id=\"appModule.password\" /></label>\n      <input\n        type=\"text\"\n        name=\"password\"\n        value={user.password}\n        onChange={handleInputChange}\n      />\n      <label className=\"label \"><IntlMessages id=\"company.userType\" /></label>\n      <input\n        type=\"text\"\n        name=\"user_type\"\n        value={user.user_type}\n        onChange={handleInputChange}\n      />\n      <label className=\"label \"> <IntlMessages id=\"company.name\" /></label>\n      <input\n        type=\"text\"\n        name=\"company\"\n        value={user.company}\n        onChange={handleInputChange}\n      />\n      <button className=\"button button2\"><IntlMessages id=\"user.update\"/></button>\n      <button\n        onClick={() => props.setEditing(false)}\n        className=\"button muted-button button2\"\n      >\n        <IntlMessages id=\"form.cancel\"/>\n      </button>\n    </form>\n  );\n};\n\nexport default EditUserForm;\n","import React from \"react\";\nimport \"./mystyles.css\";\nimport IntlMessages from \"util/IntlMessages\";\n\nconst UserTable = props => (\n  <table>\n    <thead>\n      <tr>\n        <th className=\"label\">\n          <IntlMessages id=\"appModule.name\" />\n        </th>\n        <th className=\"label\">\n          <IntlMessages id=\"appModule.username\" />\n        </th>\n        <th className=\"label\">\n          <IntlMessages id=\"sidebar.appModule.mail\" />\n        </th>\n        <th className=\"label\">\n          <IntlMessages id=\"appModule.password\" />\n        </th>\n        <th className=\"label\">\n          <IntlMessages id=\"company.userType\" />\n        </th>\n        <th className=\"label\">\n          <IntlMessages id=\"company.name\" />\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      {props.users.length > 0 ? (\n        props.users.map(user => (\n          <tr key={user.id}>\n            <td className=\"label\">{user.name}</td>\n            <td className=\"label\">{user.username}</td>\n            <td className=\"label\">{user.email}</td>\n            <td className=\"label\">{user.password}</td>\n            <td className=\"label\">{user.user_type}</td>\n            <td className=\"label\">{user.company}</td>\n            <td>\n              <button\n                onClick={() => {\n                  props.editRow(user);\n                }}\n                className=\"button muted-button button2\"\n              >\n                <IntlMessages id=\"button.edit\" />\n              </button>\n              <button\n                onClick={() => props.deleteUser(user.id)}\n                className=\"button button2 muted-button\"\n              >\n                <IntlMessages id=\"button.delete\" />\n              </button>\n            </td>\n          </tr>\n        ))\n      ) : (\n        <tr>\n          <td className=\"label\" colSpan={3}>\n            No users\n          </td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n);\n\nexport default UserTable;\n","class ApiService{\n     fetchGet = async (url, data) => {\n        try {\n            const response = await fetch(url, data);\n            const jsonData = await response.json();\n            return jsonData\n        } catch(e){\n            console.log(\"Error\", e);\n        }\n     }\n}\n\nexport default ApiService","import React, { useEffect, useState, Fragment } from \"react\";\nimport AddUserForm from \"./addUserForm\";\nimport EditUserForm from \"./editUserForm\";\nimport UserTable from \"./userTable\";\nimport IntlMessages from \"util/IntlMessages\";\nimport ApiService from \"app/services/ApiServices\";\nimport { URL } from \"constants/ActionTypes\";\n\nconst MyTextField = () => {\n  // Data\n  const initialFormState = {\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    user_type: \"\",\n    company: \"\"\n  };\n\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(initialFormState);\n  const [editing, setEditing] = useState(false);\n\n  const settingUsers = async () => {\n    try {\n      const api = new ApiService();\n\t  const response = await api.fetchGet(`${URL}/users`, {});\n      setUsers(response);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    settingUsers();\n  }, []);\n\n  // CRUD operations\n  const addUser = user => {\n    setUsers([...users, user]);\n  };\n\n  const deleteUser = name => {\n    setEditing(false);\n\n    setUsers(users.filter(user => user.name !== name));\n  };\n\n  const updateUser = (name, updatedUser) => {\n    setEditing(false);\n\n    setUsers(users.map(user => (user.name === name ? updatedUser : user)));\n  };\n\n  const editRow = user => {\n    setEditing(true);\n\n    setCurrentUser({\n      name: user.name,\n      username: user.username,\n      email: user.email,\n      password: user.password,\n      user_type: user.user_type.name,\n\t  company: user.company.name\n\t  \n\t});\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"flex-row\">\n        <div className=\"flex-large\">\n          {editing ? (\n            <Fragment>\n              <h2>\n                <IntlMessages id=\"edit.user\" />\n              </h2>\n              <EditUserForm\n                editing={editing}\n                setEditing={setEditing}\n                currentUser={currentUser}\n                updateUser={updateUser}\n              />\n            </Fragment>\n          ) : (\n            <Fragment>\n              <h2>\n                <IntlMessages id=\"user.info\" />\n              </h2>\n              <AddUserForm addUser={addUser} />\n            </Fragment>\n          )}\n        </div>\n        <div className=\"flex-large\">\n          <h2>\n            <IntlMessages id=\"mod.users\" />\n          </h2>\n          <UserTable users={settingUsers} editRow={editRow} deleteUser={deleteUser} />\n\t\t  \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MyTextField;\n","import MUIDataTable from \"mui-datatables\";\nimport React, { Component } from \"react\";\nimport IntlMessages from \"util/IntlMessages\";\nimport { URL } from 'constants/ActionTypes'\nimport Loader from 'react-loader-spinner'\n\nconst columns = [\n  {\n    name: \"name\",\n    label: <IntlMessages id=\"appModule.name\" />,\n    options: {\n      filter: true,\n      sort: true\n    }\n  },\n  {\n    name: \"username\",\n    label: <IntlMessages id=\"appModule.username\" />,\n    options: {\n      filter: true,\n      sort: false\n    }\n  },\n  {\n    name: \"email\",\n    label: <IntlMessages id=\"sidebar.appModule.mail\" />,\n    options: {\n      filter: true,\n      sort: false\n    }\n  },\n  {\n    name: \"company.name\",\n    label: <IntlMessages id=\"company.name\" />,\n    options: {\n      filter: true,\n      sort: false\n    }\n  },\n  {\n    name: \"user_type.name\",\n    label: <IntlMessages id=\"company.userType\" />,\n    options: {\n      filter: true,\n      sort: false\n    }\n  }\n];\n\nconst options = {\n  filterType: \"checkbox\",\n  sort: false,\n  search: false,\n  print: false,\n  download: false,\n  selectableRows: \"none\"\n};\n\nexport default class DataBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${URL}/users`)\n      .then(res => res.json())\n      .then(({\n        data\n      }) => {\n    \n        this.setState({\n          isLoaded: true,\n          users:data.records\n        });\n      });\n  }\n\n  render() {\n    let { isLoaded, users } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className = \"page-heading\">\n          <Loader type=\"Audio\" color=\"#3f51b5\" height={80} width={80} />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <MUIDataTable\n            title={\n              <h1>\n                <IntlMessages id=\"user.list\" />\n              </h1>\n            }\n            data={users}\n            columns={columns}\n            options={options}\n          />\n        </div>\n      );\n    }\n  }\n}","import React, { Component } from 'react'\r\nimport ContainerHeader from 'components/ContainerHeader'\r\nimport IntlMessages from 'util/IntlMessages'\r\nimport MyTextField from \"../../../components/AllMyComponents/textField\"\r\nimport DataBox from \"../../../components/AllMyComponents/dataBox\"\r\n\r\nexport class UsersAdministration extends Component {\r\n  render() {\r\n    return (\r\n        <div className = \"app-wrapper\">\r\n            <ContainerHeader\r\n                 match={this.props.match}\r\n                title={<IntlMessages id=\"pages.samplePage\" />}\r\n            />\r\n            <div className = \"page-heading\">\r\n              <MyTextField />\r\n            </div> \r\n            <div>\r\n              <DataBox/>\r\n            </div>  \r\n        </div>            \r\n    )\r\n}\r\n}\r\n\r\nexport default UsersAdministration\r\n\r\n"],"sourceRoot":""}